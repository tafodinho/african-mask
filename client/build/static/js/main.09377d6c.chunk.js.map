{"version":3,"sources":["assets/images/6.png","assets/images/2.png","assets/images/5.png","assets/images/bid-image1.png","components/CustumButton.jsx","components/BidTable.jsx","containers/Home.jsx","components/Logo.jsx","components/Navigation.jsx","components/AccountNav.jsx","components/Header.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","CustomButton","type","children","onClickEvent","className","onClick","BidTable","src","style","width","Home","leftPaneRef","flex","ref","ArrowLeftOutlined","ArrowRightOutlined","span","hoverable","cover","alt","Image1","ArrowUpOutlined","Image2","Image3","BidImage","Logo","props","Navigation","AccountNav","Header","React","navbar","setNavbar","changeBackground","console","log","current","scrollTop","addEventListener","App","state","storageValue","web3","accounts","contract","createRef","componentDidMount","a","runExample","this","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.09377d6c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/6.3fd9f331.png\";","module.exports = __webpack_public_path__ + \"static/media/2.a51302e3.png\";","module.exports = __webpack_public_path__ + \"static/media/5.96a77b98.png\";","module.exports = __webpack_public_path__ + \"static/media/bid-image1.44b89253.png\";","\nimport * as React from 'react';\nimport { Button } from 'antd';\n// type Props = {\n  \n// };\nexport const CustomButton = ({type, children, onClickEvent}) => {\n  return (\n    <div className=\"custom-button\">\n      {}\n      <Button type=\"default\" className={type} onClick={onClickEvent}>\n        {children}\n      </Button>\n    </div>\n  );\n};","import * as React from 'react';\nimport { Avatar, Image } from 'antd';\nimport { CustomBottun, CustomButton } from './/CustumButton';\n// type Props = {\n  \n// };\nexport function BidTable({}) {\n  return (\n    <div className=\"bid-table\">\n      <div className=\"bid-table-header\">\n        <div className=\"bid-table-header-left\">\n         <Avatar src={<Image src=\"https://joeschmoe.io/api/v1/random\" style={{ width: \"3em\" }} />} />\n        </div>\n        <div className=\"bid-table-header-right\">\n          <p className=\"user-title\">Hemes God Bust</p>\n          <p className=\"user-username\">@Michail Kolonis</p>\n        </div>\n      </div>\n      <div className=\"bid-table-body\">\n        <div className=\"bid-table-body-left\">\n          <p className=\"current-bid\">Current Bid</p>\n          <p className=\"price-eth\">6.00 ETH</p>\n          <p className=\"price-dollar\">$12.459.47</p>\n        </div>\n        <div className=\"bid-table-body-right\">\n          <p className=\"remaining-time\">Remaining Time</p>\n          <p className=\"time\">\n            02  23  45\n          </p>\n          <p className=\"hours-mins-secs\">Hours  Minutes  Seconds</p>\n        </div>\n      </div>\n      <div className=\"bid-table-footer\">\n        <div className=\"bid-table-footer-left\">\n          <CustomButton type=\"green\">Place a Bid</CustomButton>\n        </div>\n        <div className=\"bid-table-footer-right\">\n          <p className=\"view-artwork\">View Artwork</p>\n        </div>\n      </div>\n    </div>\n  );\n};","\nimport * as React from 'react';\nimport { \n  Row, \n  Col,  \n  Card,\n  Image\n} from 'antd';\nimport { \n  ArrowLeftOutlined, \n  ArrowRightOutlined,\n  ArrowUpOutlined,\n} from '@ant-design/icons'\n\nimport { CustomButton } from '../components/CustumButton';\nimport { BidTable } from '../components/BidTable';\n\nimport Image1  from '../assets/images/6.png';\nimport Image2 from '../assets/images/2.png';\nimport Image3 from '../assets/images/5.png';\nimport BidImage from '../assets/images/bid-image1.png';\n// type Props = {\n  \n// };\n// type State = {\n  \n// };\nexport const Home = ({leftPaneRef}) => {\n    return (\n      <div className=\"homepage\">\n        <Row className=\"home-row\">\n          <Col flex={3} className=\"left-pane\" ref={leftPaneRef}>\n            <p className=\"big-title\">Discover the lagest African Digital Art Showcase</p>\n            <p className=\"sub-title\">The worlds largest african digital art marketplace for crypto collectibles and non-fungible tokesn (NFTs).</p>\n            <CustomButton type=\"dark\">Explore</CustomButton>\n            <div className=\"art-display\">\n              <div className=\"art-display-header\">\n                <p className=\"art-display-title\">Featured ArtWork</p>\n                <div className=\"art-display-nav\">\n                  <ArrowLeftOutlined />\n                  <ArrowRightOutlined />\n                </div>\n              </div>\n              <div className=\"art-area\">\n                <Row>\n                  <Col span={8}>\n                    <Card\n                      hoverable\n                      style={{ width: 240 }}\n                      cover={<img alt=\"example\" src={Image1} />}\n                    >\n                      {/* <Card.Meta title=\"Europe Street beat\" description=\"www.instagram.com\" /> */}\n                      <div className=\"image-icon\">\n                        <ArrowUpOutlined />\n                      </div>\n                    </Card>\n                  </Col>\n                  <Col span={8}>\n                    <Card\n                      hoverable\n                      style={{ width: 240 }}\n                      cover={<img alt=\"example\" src={Image2} />}\n                    >\n                      <div className=\"image-icon\">\n                        <ArrowUpOutlined />\n                      </div>\n                    </Card>\n                  </Col>\n                  <Col span={8}>\n                    <Card\n                      hoverable\n                      style={{ width: 240 }}\n                      cover={<Image alt=\"example\" src={Image3} />}\n                    >\n                      <div className=\"image-icon\">\n                        <ArrowUpOutlined />\n                      </div>\n                    </Card>\n                  </Col>\n                </Row>\n              </div>\n            </div>\n          </Col>\n          <Col flex={2} className=\"right-pane\">\n            <div className=\"bid-image-container\">\n              <img src={BidImage} style={{ width: 500 }} />\n            </div>\n            <BidTable />\n          </Col>\n        </Row>\n      </div>\n    );\n};","\nimport * as React from 'react';\n// type Props = {\n  \n// };\nexport const Logo = ({props: Props}) => {\n  return (\n    <div className=\"logo\">\n      <p>Africa Mask.</p>\n    </div>\n  );\n};","\nimport * as React from 'react';\n// type Props = {\n  \n// };\nexport const Navigation = ({}) => {\n  return (\n    <div className=\"navigation\">\n      <ul className=\"nav\">\n        <li className=\"nav-item\">Home</li>\n        <li className=\"nav-item\">ArtWork</li>\n        <li className=\"nav-item\">Community</li>\n      </ul>\n    </div>\n  );\n};","import * as React from 'react';\nimport { CustomButton } from './CustumButton';\n// type Props = {\n  \n// };\nexport const AccountNav = ({}) => {\n  return (\n    <div className=\"account-nav\">\n      <CustomButton type=\"green\">Log In</CustomButton>\n    </div>\n  );\n};","import * as React from 'react';\nimport { Logo } from './Logo';\nimport { Navigation } from './Navigation';\nimport { AccountNav } from './AccountNav';\n// type Props = {\n  \n// };\nexport const Header = ({leftPaneRef}) => {\n  const [navbar, setNavbar] = React.useState();\n\n  const changeBackground = () => {\n    console.log(leftPaneRef)\n    if (leftPaneRef.current.scrollTop >= 100) {\n      setNavbar(true)\n    } else {\n      setNavbar(false)\n    }\n  }\n\n  React.useEffect(() => {\n    changeBackground()\n    // adding the event when scroll change background\n    leftPaneRef.current.addEventListener(\"scroll\", changeBackground)\n  })\n\n\n  return (\n    <div className={navbar ? \"header background\" : \"header\"}>\n      <Logo />\n      <Navigation />\n      <AccountNav />\n    </div>\n  );\n};","import React, { Component } from \"react\";\nimport { Home } from './containers/Home';\nimport { Header } from './components/Header';\nimport SimpleStorageContract from \"./contracts/SimpleStorage.json\";\nimport getWeb3 from \"./getWeb3\";\n\nclass App extends Component {\n  state = { storageValue: 0, web3: null, accounts: null, contract: null };\n  leftPaneRef = React.createRef();\n\n  componentDidMount = async () => {\n    // try {\n    //   // Get network provider and web3 instance.\n    //   const web3 = await getWeb3();\n\n    //   // Use web3 to get the user's accounts.\n    //   const accounts = await web3.eth.getAccounts();\n\n    //   // Get the contract instance.\n    //   const networkId = await web3.eth.net.getId();\n    //   const deployedNetwork = SimpleStorageContract.networks[networkId];\n    //   const instance = new web3.eth.Contract(\n    //     SimpleStorageContract.abi,\n    //     deployedNetwork && deployedNetwork.address,\n    //   );\n\n    //   // Set web3, accounts, and contract to the state, and then proceed with an\n    //   // example of interacting with the contract's methods.\n    //   this.setState({ web3, accounts, contract: instance }, this.runExample);\n    // } catch (error) {\n    //   // Catch any errors for any of the above operations.\n    //   alert(\n    //     `Failed to load web3, accounts, or contract. Check console for details.`,\n    //   );\n    //   console.error(error);\n    // }\n  };\n\n  runExample = async () => {\n    const { accounts, contract } = this.state;\n\n    // Stores a given value, 5 by default.\n    // await contract.methods.set(5).send({ from: accounts[0] });\n\n    // // Get the value from the contract to prove it worked.\n    // const response = await contract.methods.get().call();\n\n    // Update state with the result.\n    // this.setState({ storageValue: response });\n  };\n\n  render() {\n    // if (!this.state.web3) {\n    //   return <div>Loading Web3, accounts, and contract...</div>;\n    // }\n    return (\n      <div className=\"App\">\n        <Header leftPaneRef={this.leftPaneRef} />\n        <Home leftPaneRef={this.leftPaneRef} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/styles/index.scss';\nimport 'antd/dist/antd.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}